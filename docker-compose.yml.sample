version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    labels:
      - traefik.backend=blog
      - traefik.frontend.rule=Host:horsekfh.ru,www.horsekfh.ru
      - traefik.docker.network=web
      - traefik.port=3000
    volumes:
      - ./db:/home/node/app/db/
    networks:
      - web
    depends_on:
      - db

  wg-easy:
    environment:
      - WG_HOST=horsekfh.ru
      - PASSWORD=Error456
      - WG_PORT=51820
      - WG_DEFAULT_ADDRESS=10.0.0.x
      - WG_DEFAULT_DNS=1.1.1.1
      - WG_MTU=1420
      - WG_ALLOWED_IPS=10.0.0.0/24
    image: weejewel/wg-easy
    container_name: wg-easy
    volumes:
      - ./wireguard:/etc/wireguard
    ports:
      - "51820:51820/udp"
    restart: unless-stopped
    labels:
      - traefik.backend=vpnsec
      - traefik.frontend.rule=Host:vpnsec.horsekfh.ru
      - traefik.docker.network=web
      - traefik.port=51821
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - web

  traefik:
    image: "traefik:1.7.2-alpine"
    container_name: traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "$PWD/acme.json:/acme.json"
      - "$PWD/traefik.toml:/traefik.toml"
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    labels:
      - traefik.frontend.rule=Host:monitor.horsekfh.ru
      - traefik.port=8080
    networks:
      - web

  db:
    image: "postgres:13.7-alpine"
    container_name: postgres
    volumes:
      - "$PWD/pgdata:/var/lib/postgresql/data/"
    environment:
      POSTGRES_DB: nodedb
      POSTGRES_USER: pgadmin
      POSTGRES_PASSWORD: pgpass
    labels:
      - traefik.enable=false
    networks:
      - web

  adminer:
    image: adminer:latest
    container_name: adminer
    labels:
      - traefik.backend=adminer
      - traefik.frontend.rule=Host:db.horsekfh.ru
      - traefik.docker.network=web
      - traefik.port=8080
    networks:
      - web
    depends_on:
      - db

networks:
  web:
    external: false